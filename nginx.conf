worker_processes  1; # 根据需要调整

events {
    worker_connections 1024;  # 根据需要调整
}

http {
    # 定义独立的llm上游服务器组，地址根据实际情况调整
    upstream backend1 {
        server 192.168.100.1:3001;
    }

    upstream backend2 {
        server 192.168.100.1:3002;
    }

    upstream backend3 {
        server 192.168.100.1:3003;
    }

    # 使用 split_clients 根据某个变量（例如 $remote_addr）分配后端和 Bearer Key
    split_clients "${remote_addr}${request_id}" $backend_choice {
        33%     "backend1";
        33%     "backend2";
        *       "backend3";
    }

    # 根据选择的后端设置 Bearer Key
    map $backend_choice $bearer_key {
        "backend1" "Bearer sk-55794d46f4754276b31f4ff22a18c0c9";
        "backend2" "Bearer sk-55794d46f4754276b31f4ff22a18c0c9";
        "backend3" "Bearer sk-55794d46f4754276b31f4ff22a18c0c9";
        default "";  # 如果没有匹配，设置为空
    }

    server {
        listen 80;
        server_name _; # 仅用于演示

        location / {
            # 根据选择的后端进行代理
            proxy_pass http://$backend_choice;

            # 设置代理请求中的 Authorization 头
            proxy_set_header Authorization $bearer_key;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # 把上游 host 添加到响应头
            add_header X-Upstream-Host $proxy_host;
        }
    }
}
